@model Entities.DataTransferObjects.BookDto

<h2>Add book</h2>

<link rel="stylesheet" type="text/css" href="~/CSS/Books/add_book_page_styles.css" />
<form id="addBookForm">
    <div>
        <label>Book Title</label>
        <input type="text" name="BookTitle" placeholder="Book Title" />
    </div>

    <div>
        <label>ISBN</label>
        <input type="text" name="ISBN" placeholder="ISBN" />
    </div>

    <div>
        <label>Author</label>
        <select name="AuthorId">
            @foreach (var author in ViewBag.Authors)
            {
                <option value="@author.Value" @(author.Selected ? "selected" : "")>
                    @author.Text
                </option>
            }
        </select>
    </div>

    <div>
        <label>Genre</label>
        <select name="Genre">
            @foreach (var genre in ViewBag.Genres)  
            {
                <option value="@genre.Value" @(genre.Selected ? "selected" : "")>
                    @genre.Text  
                </option>
            }
        </select>
    </div>

    <div>
        <label>Description</label>
        <input type="text" name="Description" placeholder="Description" />
    </div>

    <div>
        <label>Amount</label>
        <input type="text" name="Amount" placeholder="Amount" />
    </div>

    <button type="button" onclick="submitForm()">Add</button>
</form>

<script>
    async function submitForm() {
        const form = document.getElementById('addBookForm');

        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        const token = localStorage.getItem('authToken');
        
        const bookData = {
                BookTitle: data.BookTitle,
                ISBN: data.ISBN,
                AuthorId: parseInt(data.AuthorId), 
                Genre: data.Genre,
                Description: data.Description,
                Amount: parseInt(data.Amount)
            };

        try {
            const response = await fetch(`/api/books/add`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
                },
            body: JSON.stringify(bookData)
            });

            if (response.ok) {
                const booksResponse = await fetch('/api/books/booksPage', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                    }
                });
                if (booksResponse.ok)
                    window.location.href = '/api/books/booksPage';
                else {
                    alert("Failed to load list of books");
                }
            } else {
                alert("Failed to add the book. Please try again.");
            }
        } catch (error) {
            alert("An error occurred. Please try again later.");
        }
    }
</script>
