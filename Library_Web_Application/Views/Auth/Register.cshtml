@page
@model Library_Web_Application.Views.Register

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Register</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .container {
            max-width: 400px;
            margin: auto;
            padding: 20px;
        }
        label, input {
            display: block;
            width: 100%;
            margin-bottom: 10px;
        }
        input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
        .response {
            margin-top: 20px;
            padding: 10px;
            background-color: #f1f1f1;
            border: 1px solid #ccc;
        }
    </style>
</head>
<body>
<div class="container">
    <h2>Register</h2>
    <form id="registerForm">
        <label for="userName">Username:</label>
        <input type="text" id="registerUsername" required />

        <label for="password">Password:</label>
        <input type="password" id="registerPassword" required />

        <label for="roles">Roles (comma separated):</label>
        <input type="text" id="registerRoles" required />

        <input type="submit" value="Register" />
    </form>

    <div class="response" id="response"></div>
</div>

<script>
    document.getElementById('registerForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const username = document.getElementById('registerUsername').value;
        const password = document.getElementById('registerPassword').value;
        const roles = document.getElementById('registerRoles').value.split(',').map(role => role.trim());

        const registerData = {
            username: username,
            password: password,
            roles: roles
        };

        try {
            const response = await fetch('/api/authentication', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(registerData)
            });

            const result = await response.json();
            const responseDiv = document.getElementById('response');
            
            if (response.ok) {
                responseDiv.innerHTML = 'Registration successful!';
            } else {
                responseDiv.innerHTML = 'Registration failed: ' + JSON.stringify(result);
            }
        } catch (error) {
            document.getElementById('response').innerHTML = 'Error: ' + error;
        }
    });
</script>
</body>
</html>
